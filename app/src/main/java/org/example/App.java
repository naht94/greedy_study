/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.example;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.stream.Collectors;

public class App {
    public static void main(String[] args) {
        int[] lost = {2,4};
        int[] reserve = {1,3,5};
        int result = new App().solution(5, lost, reserve);
        System.out.println(result);
    }

    public int solution(int n, int[] lost, int[] reserve) {
        int result = n - notAvailableCount(new ArrayList<Integer>(Arrays.stream(lost).boxed().collect(Collectors.toList())), new ArrayList<Integer>(Arrays.stream(reserve).boxed().collect(Collectors.toList())));
        return result;
    }

    public int notAvailableCount(ArrayList<Integer> lost, ArrayList<Integer> reserve) {
        Collections.sort(reserve);
        Collections.sort(lost);
        lost.removeIf(lostNum -> {
            int result = reserve.stream()
            .filter(reserveNum -> reserveNum == lostNum)
            .findFirst()
            .orElse(-1);
            if(result != -1) {
                reserve.removeIf(n -> n == result);
                return true;
            }
            return false;
        });
        lost.removeIf(lostNum -> {
            int result = reserve.stream()
            .filter(reserveNum -> Math.abs(reserveNum - lostNum) == 1)
            .findFirst()
            .orElse(-1);
            if(result != -1) {
                reserve.removeIf(n -> n == result);
                return true;
            }
            return false;
        });
        return lost.size();
    }
}
